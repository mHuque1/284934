@page "/IniciarSesion"
@using System.ComponentModel.DataAnnotations
@using Dominio
@using Data
@inject Usuarios UsuarioServicios;
@inject NavigationManager NavigationManager;
@inherits AuthEnforce


<PageTitle>Iniciar Sesión</PageTitle>

@if(!UsuarioServicios.IsSignedIn)
{
    <h1 class="text-center">Iniciar Sesión</h1>

    @if (!InicioSesionValido)
    {
        <div class="alert alert-danger" role="alert">
            El correo electrónico o la contraseña no son correctos.
        </div>
    }

    <EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />

        <div class="container d-flex justify-content-center">
            <div class="col-md-6">
                <div class="form-group">
                    <label for="email">Correo electrónico:</label>
                    <InputText id="email" class="form-control" @bind-Value="model.Email" />
                    <ValidationMessage For="@(() => model.Email)" />
                </div>

                <div class="form-group">
                    <label for="password">Contraseña:</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="model.Password" />
                    <ValidationMessage For="@(() => model.Password)" />
                </div>
                <br />
                <button class="btn btn-primary">Iniciar Sesión</button>

                <p class="mt-3 text-center">¿No tienes una cuenta? <a href="/Registro">Regístrate aquí</a></p>
            </div>
        </div>
    </EditForm>
}


@code {
    private LoginModel model = new LoginModel();
    private bool InicioSesionValido = true;

    private void HandleValidSubmit()
    {
        if (UsuarioServicios.SignIn(model.Email,model.Password))
        {
            InicioSesionValido = true;
            NavigationManager.NavigateTo("/", true);
        }
        else
        {
            InicioSesionValido = false;
        }
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "El correo electrónico es obligatorio.")]
        public string Email { get; set; }

        [Required(ErrorMessage = "La contraseña es obligatoria.")]
        public string Password { get; set; }
    }
}
