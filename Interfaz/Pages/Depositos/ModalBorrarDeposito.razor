@using Data
@using Dominio
@inject AuthenticationStateProvider authStateProvider
@inject Promociones promociones
@inject Depositos depositos
@inject Usuarios UsuarioServicios

<div class="container d-flex justify-content-center align-items-center">
    <div class="text-center">
        <h3>¿Estás seguro de que deseas borrar?</h3>
        <p>@depo.ID</p>
        <p>Esta acción no se puede deshacer.</p>
        <button class="btn btn-success" @onclick="Confirmar" disabled="@btnClick">Confirmar</button>
        <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
    </div>
</div>

@code {
    private bool btnClick;
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; } = default!;
    [Parameter] public Deposito depo { get; set; }


    private async Task Cancelar()
    {
        await BlazoredModal.CancelAsync();
    }

    private async void Confirmar()
    {
        if (btnClick) return;
        btnClick = true;

        depositos.DeleteDeposito(depo, UsuarioServicios.GetCurrentUser);
        await BlazoredModal.CloseAsync(ModalResult.Ok());
    }

   
}
