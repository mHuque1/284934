@page "/Reservas"
@using Dominio
@using Data
@inject Usuarios UsuarioServicios;
@inject Reservas ReservaServicio;
@inject NavigationManager NavigationManager;
@inherits AuthEnforce

@if(UsuarioServicios.IsSignedIn)
{
    <div class="container">
        <h1>Mis Reservas</h1>


        <table class="table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Comienzo</th>
                    <th>Fin</th>
                    <th>Costo</th>
                    <th>Deposito</th>
                    <th>Estado</th>

                </tr>
            </thead>
            <tbody>
                @foreach (Reserva reserva in reservas)
                {
                    <tr>
                        <td>@reserva.ID</td>
                        <td>@reserva.Comienzo.ToString("d")</td>
                        <td>@reserva.Fin.ToString("d")</td>
                        <td>@reserva.Costo.ToString("C")</td>
                        <td><button @onclick="() => VerInfo(reserva.Deposito)" class="btn btn-info">Info deposito</button></td>
                        <td><button @onclick="() => VerEstadoReserva(reserva)" class="btn btn-secondary">Ver Estado Solicitud</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


@code {
    [CascadingParameter] public IModalService Modal { get; set; } = default!;
    private IList<Reserva> reservas = new List<Reserva>();
    private void CargarReservas() => reservas = ReservaServicio.GetReservasUsuario(UsuarioServicios.GetCurrentUser);



    protected override void OnInitialized()
    {
        if(UsuarioServicios.IsSignedIn)
        {
            CargarReservas();
        }
        
    }

   

    private async Task VerInfo(Deposito depo)
    {
        var parameters = new ModalParameters().Add(nameof(ModalInfoDeposito.depo), depo);
        var messageForm = Modal.Show<ModalInfoDeposito>("Datos del deposito", parameters);
        var result = await messageForm.Result;
        messageForm.Close();
    }

    private async Task VerEstadoReserva(Reserva res)
    {
        var parameters = new ModalParameters().Add(nameof(ModalEstadoReserva.res), res);
        var messageForm = Modal.Show<ModalEstadoReserva>("Estado de la reserva", parameters);
        var result = await messageForm.Result;
    }
}
